"use strict";

const http=require("http");
const express=require("express");
const app=express();
const fs=require("fs");

let mongo=require("mongodb");
const { json } = require("body-parser");
let mongoClient=mongo.MongoClient;
const ObjectId=mongo.ObjectID;
const CONNECTIONSTRING=process.env.MONGODB_URI || "mongodb://lucacastelli:Felix2012@cluster0-shard-00-00.f6esz.mongodb.net:27017,cluster0-shard-00-01.f6esz.mongodb.net:27017,cluster0-shard-00-02.f6esz.mongodb.net:27017/test?replicaSet=atlas-1477sw-shard-0&ssl=true&authSource=admin";
const CONNECTIONOPTIONS={useNewUrlParser: true,useUnifiedTopology:true};
let currentUser="CAMOeCAMO";
let currentGame="";
let currentMod="Wiki";
const PORT=process.env.PORT || 1337;
const TTL_Token = 20; //espresso in sec 

const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");

const server=http.createServer(app);
server.listen(PORT, function() {
    console.log("Server in ascolto sulla porta "+PORT);
    init();
});

let paginaErrore="";
let privateKey;
function init(req,res)
{
    fs.readFile("./static/error.html", function (err, data)
    {
        if (!err)
            paginaErrore = data.toString();
        else
            paginaErrore = "<h1>Risorsa non trovata</h1>";
    });
    fs.readFile("./keys/private.key", function (err, data) {
        if (!err) {
            privateKey = data.toString();
        }
        else {
            //Richiamo la route di gestione degli errori
            console.log("File mancante: private.key");
            server.close();
        }
    })

    app.response.log = function (message) {
        console.log("Errore: " + message);
    }
}

app.get('/api/updateCurrentGame', function (req, res, next) {
    currentGame=req.query["game"];
    res.send(JSON.stringify({"ris":"ok"}));
});

app.get('/api/updateCurrentMod', function (req, res, next) {
    currentMod=req.query["mod"];
    res.send(JSON.stringify({"ris":"ok"}));
});

app.get('/api/elencoUser', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            let db=client.db("Gaming");
            let collection=db.collection("User");
            collection.find().toArray(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/aggiornaGiocatori', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            let db=client.db("Gaming");
            let collection=db.collection("Find");
            //collection.updateOne({"_id":req.query.id},{ $set: {"Giocatori" : "200"} },function(err,data){
            console.log(req.query.user);
            collection.updateOne({"Username": req.query.user}, {$inc: {"Giocatori": -1}},function(err,data){
                if(err)
                res.status(500).send("Errore di esecuzione query");
            else
            {
                res.send(data);
            }
            });
        }
    });
});

app.get('/api/elencoPreferenze', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            let db=client.db("Gaming");
            let collection=db.collection("Preferenze");
            collection.find({"Username":currentUser}).toArray(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/infoGame', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            //console.log(req.query["game"]);
            let db=client.db("Gaming");
            let collection=db.collection("Games");
            collection.findOne({"titolo":req.query.game},(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            }));
        }
    });
});

app.get('/api/infoUser', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            //console.log(req.query["game"]);
            let db=client.db("Gaming");
            let collection=db.collection("User");
            collection.findOne({"Username":currentUser},(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            }));
        }
    });
});

app.get('/api/news', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            //console.log(req.query["game"]);
            let db=client.db("Gaming");
            let collection=db.collection("News");
            collection.find({"Gioco":req.query.game}).sort({"data":1}).toArray(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/esports', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            //console.log(req.query["game"]);
            let db=client.db("Gaming");
            let collection=db.collection("Esports");
            collection.find({"Gioco":req.query.game}).sort({"data":1}).toArray(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/forum', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            let db=client.db("Gaming");
            let collection=db.collection("Forum");
            collection.find({"Gioco":req.query.game}).sort({"_id":1}).toArray(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/Accept', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            let db=client.db("Gaming");
            let collection=db.collection("Accepted");
            collection.insertOne({"Host":req.query.user,"Client":currentUser},function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/richieste', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            //console.log(req.query["game"]);
            let db=client.db("Gaming");
            let collection=db.collection("Find");
            collection.find({"Gioco":req.query.game}).sort({"_id":-1}).toArray(function(err,data){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(data);
            });
        }
    });
});

app.get('/api/Inviarichiesta', function (req, res, next) {
    mongoClient.connect(CONNECTIONSTRING,CONNECTIONOPTIONS,function(err,client){
        if(err){
            res.status(503).send("Errore di connessione al db");
        }else{
            //console.log(req.query["game"]);
            let db=client.db("Gaming");
            let collection=db.collection("Find");
            let par=req.query.par.split(';');
            collection.insertOne( {"Username": currentUser, "Piattaforma": par[1], "Descrizione": par[2], "Gioco": currentGame, "Giocatori": par[0] },function(err){
                if(err)
                    res.status(500).send("Errore di esecuzione query");
                else
                    res.send(JSON.stringify({"ris":"ok"}));
            });
        }
    });
});

app.get('/api/currentGame', function (req, res, next) {
        res.send(JSON.stringify({"ris":currentGame}));
});
app.get('/api/currentMod', function (req, res, next) {
    res.send(JSON.stringify({"ris":currentMod,"user":currentUser}));
});

app.use("/",express.static("./static"));

app.use('/', function (req, res, next) {
    res.status(404);
    if(req.originalUrl.startsWith("/api/"))
        {
            res.json('"Risorsa non trovata"');
        }
    else
        {
            res.send(paginaErrore);
        }
   });